<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- redis数据源 -->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}"/>
		<property name="maxTotal" value="${redis.maxActive}"/>
		<property name="maxWaitMillis" value="${redis.maxWait}"/>
		<property name="testOnBorrow" value="true"/>
	</bean>
	<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1">
			<list>
				<bean class="redis.clients.jedis.JedisShardInfo">
					<constructor-arg index="0" value="${redis.host}" />
					<constructor-arg index="1" value="${redis.port}" type="int" />
				</bean>
			</list>
		</constructor-arg>
	</bean>
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">

	<!-- spring-data-数据工厂 -->
		<property name="password" value="${redis.pass}" />
		<property name="usePool" value="true" />
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<property name="poolConfig" ref="jedisPoolConfig" />
	</bean>


	<!-- 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 -->
	<!--<bean id="redisCacheTransfer" class="org.dubbo.api.redis.RedisCacheTransfer">-->
		<!--<property name="jedisConnectionFactory" ref="jedisConnectionFactory" />-->
	<!--</bean>-->
	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate"/>
		<!--<property name="defaultExpiration" value="${redis.expiration}"/>-->
	</bean>

	<!-- 配置RedisCacheConfig -->
	<!--<bean id="redisCacheConfig" class="com.sxd.util.RedisCacheConfig">-->
		<!--<constructor-arg ref="jedisConnectionFactory"/>-->
		<!--<constructor-arg ref="redisTemplate"/>-->
		<!--<constructor-arg ref="redisCacheManager"/>-->
	<!--</bean>-->
</beans>
